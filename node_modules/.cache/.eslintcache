[{"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\index.js":"1","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\reportWebVitals.js":"2","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\App.jsx":"3","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\Utils\\utils.js":"4","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\index.js":"5","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\reportWebVitals.js":"6","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\App.jsx":"7","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\Utils\\utils.js":"8","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\index.js":"9","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\reportWebVitals.js":"10","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\App.jsx":"11","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\Utils\\utils.js":"12","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\index.js":"13","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\reportWebVitals.js":"14","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\App.jsx":"15","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\Utils\\utils.js":"16","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\index.js":"17","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\reportWebVitals.js":"18","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\App.jsx":"19","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\Utils\\utils.js":"20"},{"size":522,"mtime":1636855397952,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1636750582882,"results":"23","hashOfConfig":"22"},{"size":7250,"mtime":1699577376846,"results":"24","hashOfConfig":"22"},{"size":2154,"mtime":1700081163865,"results":"25","hashOfConfig":"22"},{"size":522,"mtime":1636855397952,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1636750582882,"results":"28","hashOfConfig":"27"},{"size":11329,"mtime":1703687874318,"results":"29","hashOfConfig":"27"},{"size":3304,"mtime":1703637440981,"results":"30","hashOfConfig":"27"},{"size":522,"mtime":1636855397952,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1636750582882,"results":"33","hashOfConfig":"32"},{"size":7313,"mtime":1704387143014,"results":"34","hashOfConfig":"32"},{"size":3304,"mtime":1703637440981,"results":"35","hashOfConfig":"32"},{"size":522,"mtime":1636855397952,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1636750582882,"results":"38","hashOfConfig":"37"},{"size":7281,"mtime":1730256359829,"results":"39","hashOfConfig":"37"},{"size":3314,"mtime":1730254878182,"results":"40","hashOfConfig":"37"},{"size":522,"mtime":1636855397952,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1636750582882,"results":"43","hashOfConfig":"42"},{"size":7284,"mtime":1730948570043,"results":"44","hashOfConfig":"42"},{"size":3314,"mtime":1730254878182,"results":"45","hashOfConfig":"42"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ysqv9e",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r95uv1",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6rh69i",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"el6otk",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1urjjth",{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\index.js",[],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\reportWebVitals.js",[],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\App.jsx",["113","114","115"],[],"import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport hcbgImage from \"./CoverPhotoByAtticus.jpg\";\r\nimport logof from \"./ISWSLogo.PNG\";\r\n\r\nimport {\r\n  getParametersNames,\r\n  getWaterParametersNames,\r\n  getWaterParameterCode,\r\n  getParameterCode,\r\n  getStationNames,\r\n} from \"./Utils/utils\";\r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nexport default function App() {\r\n  const [stationNames, setStationNames] = useState(null);\r\n  const [waterParameter, setWaterParameter] = useState(null);\r\n\r\n  const [selectedStationName, setSelectedStationName] = useState(\"\");\r\n  const [selectedWaterParameterName, setSelectedWaterParameterName] =\r\n    useState(\"\");\r\n\r\n  const [parameterNames, setParameterNames] = useState(null);\r\n  const [selectedParameterName, setSelectedParameterName] = useState(\"\");\r\n\r\n  const [recordCode, setRecordCode] = useState(0);\r\n  const [waterRecordCode, setWaterRecordCode] = useState(0);\r\n  const [pdfName, setPdfName] = useState(\"\");\r\n  const [waterPdfName, setWaterPdfName] = useState(\"\");\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber,setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    getParametersNames().then((data) => {\r\n      setParameterNames(data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getWaterParametersNames().then((data) => {\r\n      setWaterParameter(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedParameterName && selectedParameterName.length > 0) {\r\n      console.log({ parameterNames });\r\n      getStationNames(selectedParameterName)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setStationNames(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedStationName && selectedParameterName) {\r\n      getParameterCode(selectedStationName, selectedParameterName).then(\r\n        ([paramCode, recordCode]) => {\r\n          setRecordCode(recordCode);\r\n          console.log(paramCode, recordCode);\r\n        }\r\n      );\r\n    }\r\n  }, [selectedStationName, selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedWaterParameterName) {\r\n      getWaterParameterCode(selectedWaterParameterName).then((recordCode) => {\r\n        setWaterRecordCode(recordCode);\r\n        console.log(recordCode);\r\n      });\r\n    }\r\n  }, [selectedWaterParameterName]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPdfName(`${recordCode}_EDAplots.pdf`);\r\n  }, [recordCode]);\r\n\r\n  useEffect(() => {\r\n    setWaterPdfName(`${waterRecordCode}_Factsheet.pdf`);\r\n  }, [waterRecordCode]);\r\n\r\n  const handleStationNameSelect = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedStationName(value);\r\n  };\r\n\r\n  const handleParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedParameterName(value);\r\n    setWaterRecordCode(\"\");\r\n  };\r\n  const handleWaterParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedWaterParameterName(value);\r\n    setRecordCode(\"\");\r\n    setPage(1);\r\n  };\r\n\r\n  function onDocumentLoadSuccess({ numPages: nextNumPages }) {\r\n    setNumPages(nextNumPages);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{fontFamily: \"Arial\", textAlign:\"center\", backgroundColor: \"transparent\", backgroundSize:\"cover\"}}>\r\n      <h2 style={{backgroundColor: \"orange\"}}>FoxDB : Selected Water Quality Data Factsheets and EDA Plots</h2>\r\n      <div style={{float:\"left\"}}>\r\n        <img src={logof}/>\r\n      </div>\r\n      <br/><br/><br/>\r\n      <div>\r\n        <h2> Water Quality Data Factsheet </h2>\r\n        {waterParameter && waterParameter !== null ? (\r\n          <Form.Select\r\n            aria-label=\"Parameter Names\"\r\n            onChange={handleWaterParameterNameChange}\r\n            data-live-search=\"true\"\r\n          >\r\n            <option key=\"parameter_default\" selected disabled>\r\n              Water Parameter Name\r\n            </option>\r\n            {waterParameter.map((name, i) => (\r\n              <option value={name} key={i}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        ) : (\r\n          <></>\r\n        )\r\n        }\r\n      </div>\r\n\r\n   \r\n      <div>\r\n        <h2>EDA plots by Parameter and Monitoring site</h2>\r\n        {parameterNames && parameterNames !== null ? (\r\n          <Form.Select\r\n            aria-label=\"Parameter Names\"\r\n            data-live-search=\"true\"\r\n            onChange={handleParameterNameChange}\r\n          >\r\n            <option key=\"parameter_default\" selected disabled>\r\n              Select Name\r\n            </option>\r\n            {parameterNames.map((name, i) => (\r\n              <option value={name} key={i}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {stationNames && stationNames !== null ? (\r\n          <Form.Select\r\n            aria-label=\"station Name\"\r\n            data-live-search=\"true\"\r\n            onChange={handleStationNameSelect}\r\n          >\r\n            <option key=\"station_default\" selected disabled>\r\n              Select Station\r\n            </option>\r\n            {stationNames.map((name, i) => (\r\n              <option value={name} key={i}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <br/>\r\n      {waterRecordCode !== \"\" && waterRecordCode? (\r\n        <div>\r\n          <button onClick={() => setPage(pageNumber-1)}>PREV</button>\r\n          <p style={{display:\"inline\"}}> {pageNumber} of {numPages} </p>\r\n          <button onClick={() => setPage(pageNumber+1)}>NEXT</button>\r\n          <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n            <Document\r\n              file={`${process.env.PUBLIC_URL}/results/${waterPdfName}`}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              options={options}\r\n            >\r\n              {\r\n                    <Page\r\n                      scale={100/72} \r\n                      key={`page_${pageNumber}`}\r\n                      pageNumber={pageNumber}\r\n                    />\r\n              }\r\n            </Document>            \r\n          </div>\r\n        </div>\r\n        ) : (\r\n          <></>\r\n        )}     \r\n      {recordCode !== \"\" && recordCode? (\r\n          <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n            <Document\r\n              file={`${process.env.PUBLIC_URL}/results/${pdfName}`}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              options={options}\r\n            >\r\n              {\r\n                Array.from(\r\n                  new Array(numPages),\r\n                  (el, index) => (\r\n                    <Page\r\n                      scale={100/72}\r\n                      key={`page_${index + 1}`}\r\n                      pageNumber={index + 1}\r\n                    />\r\n                  ),\r\n                )\r\n              }\r\n            </Document>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n    </div>\r\n  );\r\n}","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX\\src\\Utils\\utils.js",["116"],[],"import data from '../data/EDAPlots-selectedparameters.json'\r\nimport factdata from '../data/FactSheet-selectedparameters.json'\r\n\r\nexport const getParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const parameterNamesData = data.map(({ParameterNames}) => ParameterNames);\r\n        res([...new Set(parameterNamesData)]);\r\n    });\r\n}\r\nexport const getWaterParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const waterParameterNamesData = factdata.map(({ParameterName}) => ParameterName);\r\n        res([...new Set(waterParameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getParameterCode = (stationName, parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = data.filter((record) => record.StationName === stationName \r\n            && record.ParameterNames === parameterName);\r\n            console.log(filteredRecords)\r\n        if(filteredRecords && filteredRecords.length > 0) {\r\n            const [record, ...records] = filteredRecords;\r\n            res([record.ParameterCode, record.record_code]);\r\n        }\r\n    });\r\n}\r\n\r\nexport const getWaterParameterCode = (waterParameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = factdata.filter((record) => record.ParameterName === waterParameterName \r\n          );\r\n            console.log(filteredRecords)\r\n            if(filteredRecords && filteredRecords.length > 0) {\r\n                const [record] = filteredRecords;\r\n                res(record.Parameter_Code);\r\n            }\r\n        });\r\n}\r\n\r\nexport const getStationNames = (parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let stationNames = data.filter((record) => record.ParameterNames === parameterName);\r\n        stationNames = stationNames.map(({StationName}) => StationName);\r\n        console.log(stationNames)\r\n        res(stationNames);\r\n    });\r\n}\r\n\r\nexport const getRecordCode = (stationName, parameterCode) => {\r\n    const bracketsRegex = /\\(([^)]+)\\)/;\r\n    const bracketCode = bracketsRegex.exec(stationName)\r\n    console.log(bracketCode[1]);\r\n    return `${bracketCode[1]}00${parameterCode}`;\r\n}\r\n","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\index.js",[],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\reportWebVitals.js",[],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\App.jsx",["117","118","119"],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Copy\\src\\Utils\\utils.js",["120","121"],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\index.js",[],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\reportWebVitals.js",[],[],"C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\App.jsx",["122","123","124","125","126","127","128","129","130","131","132"],[],"import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport hcbgImage from \"./CoverPhotoByAtticus.jpg\";\r\nimport logof from \"./ISWSLogo.PNG\";\r\n\r\nimport {\r\n  getParametersNames,\r\n  getWaterParametersNames,\r\n  getWaterParameterCode,\r\n  getParameterCode,\r\n  getStationNames,\r\n  getTrendParametersNames,\r\n  getTrendPeriodNames,\r\n  getTrendParameterCode\r\n} from \"./Utils/utils\";\r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nexport default function App() {\r\n  const [stationNames, setStationNames] = useState(null);\r\n  const [waterParameter, setWaterParameter] = useState(null);\r\n\r\n  const [selectedStationName, setSelectedStationName] = useState(\"\");\r\n  const [selectedWaterParameterName, setSelectedWaterParameterName] =\r\n    useState(\"\");\r\n\r\n  const [parameterNames, setParameterNames] = useState(null);\r\n  const [selectedParameterName, setSelectedParameterName] = useState(\"\");\r\n\r\n  const [recordCode, setRecordCode] = useState(0);\r\n  const [waterRecordCode, setWaterRecordCode] = useState(0);\r\n  const [pdfName, setPdfName] = useState(\"\");\r\n  const [waterPdfName, setWaterPdfName] = useState(\"\");\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber,setPage] = useState(1);\r\n\r\n  const [periodNames, setPeriodNames] = useState(null);\r\n  const [trendParameter, setTrendParameter] = useState(null);\r\n  const [selectedPeriodName, setSelectedPeriodName] = useState(\"\");\r\n  const [selectedTrendParameterName, setSelectedTrendParameterName] =\r\n    useState(\"\");\r\n  const [trendRecordCode, settrendRecordCode] = useState(0);\r\n  const [trendPdfName, settrendPdfName] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n      getTrendParametersNames().then((data) => {\r\n          setTrendParameter(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      if (selectedTrendParameterName && selectedTrendParameterName.length > 0) {\r\n          console.log({ trendParameter });\r\n          getTrendPeriodNames(selectedTrendParameterName)\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPeriodNames(data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n      }\r\n  }, [selectedTrendParameterName]);\r\n\r\n  useEffect(() => {\r\n      if (setSelectedPeriodName && selectedTrendParameterName) {\r\n          getTrendParameterCode(selectedPeriodName, selectedTrendParameterName).then(\r\n            ([paramCode, trendRecordCode]) => {\r\n                settrendRecordCode(trendRecordCode);\r\n                console.log(paramCode, trendRecordCode);\r\n            }\r\n          );\r\n      }\r\n  }, [selectedPeriodName, selectedTrendParameterName]);\r\n\r\n  useEffect(() => {\r\n    getParametersNames().then((data) => {\r\n      setParameterNames(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWaterParametersNames().then((data) => {\r\n      setWaterParameter(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedParameterName && selectedParameterName.length > 0) {\r\n      console.log({ parameterNames });\r\n      getStationNames(selectedParameterName)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setStationNames(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedStationName && selectedParameterName) {\r\n      getParameterCode(selectedStationName, selectedParameterName).then(\r\n        ([paramCode, recordCode]) => {\r\n          setRecordCode(recordCode);\r\n          console.log(paramCode, recordCode);\r\n        }\r\n      );\r\n    }\r\n  }, [selectedStationName, selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedWaterParameterName) {\r\n      getWaterParameterCode(selectedWaterParameterName).then((recordCode) => {\r\n        setWaterRecordCode(recordCode);\r\n        console.log(recordCode);\r\n      });\r\n    }\r\n  }, [selectedWaterParameterName]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPdfName(`${recordCode}_EDAplots.pdf`);\r\n  }, [recordCode]);\r\n\r\n  useEffect(() => {\r\n    setWaterPdfName(`${waterRecordCode}_Factsheet.pdf`);\r\n  }, [waterRecordCode]);\r\n\r\n  useEffect(() => {\r\n      settrendPdfName(`${trendRecordCode}.pdf`);\r\n  }, [trendRecordCode]);\r\n\r\n  const handleStationNameSelect = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedStationName(value);\r\n  };\r\n\r\n  const handlePeriodNameSelect = (event) => {\r\n      const { value } = event.target;\r\n      setSelectedPeriodName(value);\r\n  };\r\n\r\n  const handleParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedParameterName(value);\r\n    setWaterRecordCode(\"\");\r\n  };\r\n\r\n  const handleTrendParameterNameChange = (event) => {\r\n      const { value } = event.target;\r\n      setSelectedTrendParameterName(value);\r\n      settrendRecordCode(\"\");\r\n  };\r\n\r\n  const handleWaterParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedWaterParameterName(value);\r\n    setRecordCode(\"\");\r\n    setPage(1);\r\n  };\r\n\r\n  function onDocumentLoadSuccess({ numPages: nextNumPages }) {\r\n    setNumPages(nextNumPages);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{fontFamily: \"Verdana\", textAlign:\"center\", backgroundImage: 'url('+hcbgImage+')', backgroundColor: \"transparent\", backgroundSize:\"cover\"}}>\r\n      <h2 style={{backgroundColor: \"#FF5F0F\", color: \"white\"}}>Water Quality Trends in the Fox River Watershed - Stratton Dam to Illinois River</h2>\r\n      <div style={{float:\"left\"}}>\r\n        <img src={logof}/>\r\n      </div>\r\n      <br/><br/><br/>  <br/>  <br/>\r\n     \r\n      <div>\r\n        <h3 style={{color: \"#13294b\"}}> Data Factsheet for Water Quality Constituents </h3>\r\n        {waterParameter && waterParameter !== null ? (\r\n          <Form.Select\r\n            aria-label=\"Parameter Names\"\r\n            onChange={handleWaterParameterNameChange}\r\n            data-live-search=\"true\"\r\n          >\r\n            <option key=\"parameter_default\" selected disabled>\r\n              Select Parameter\r\n            </option>\r\n            {waterParameter.map((name, i) => (\r\n              <option value={name} key={i}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        ) : (\r\n          <></>\r\n        )\r\n        }\r\n      </div>\r\n\r\n\r\n    <br/>\r\n\r\n\r\n      {waterRecordCode !== \"\" && waterRecordCode? (\r\n        <div>\r\n          <button onClick={() => setPage(pageNumber-1)}>PREV</button>\r\n          <p style={{display:\"inline\"}}> {pageNumber} of {numPages} </p>\r\n          <button onClick={() => setPage(pageNumber+1)}>NEXT</button>\r\n          <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n            <Document\r\n              file={`${process.env.PUBLIC_URL}/results/${waterPdfName}`}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              options={options}\r\n            >\r\n              {\r\n                    <Page\r\n                      scale={100/72} \r\n                      key={`page_${pageNumber}`}\r\n                      pageNumber={pageNumber}\r\n                    />\r\n              }\r\n            </Document>            \r\n          </div>\r\n        </div>\r\n        ) : (\r\n          <></>\r\n        )}  \r\n      \r\n    \r\n    </div>\r\n  );\r\n}","C:\\Users\\nnk4\\Projects\\pdf-viewer-FOX - Factsheet\\src\\Utils\\utils.js",["133","134"],[],"import data from '../data/EDAPlots-selected.json'\r\nimport factdata from '../data/FactSheet-selectedparameters.json'\r\nimport trenddata from '../data/Trendmap-selectedparameters.json'\r\n\r\n\r\nexport const getTrendParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const trendParameterNamesData = trenddata.map(({ParameterName}) => ParameterName);\r\n        res([...new Set(trendParameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getTrendPeriodNames = (parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let periodNames = trenddata.filter((record) => record.ParameterName === parameterName);\r\n        periodNames = periodNames.map(({Period}) => Period);\r\n        console.log(periodNames)\r\n        res(periodNames);\r\n    });\r\n}\r\n\r\nexport const getTrendParameterCode = (periodName, parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = trenddata.filter((record) => record.Period === periodName \r\n            && record.ParameterName === parameterName);\r\n        console.log(filteredRecords)\r\n        if(filteredRecords && filteredRecords.length > 0) {\r\n            const [record, ...records] = filteredRecords;\r\n            res([record.Parameter_Code, record.trend_record_code]);\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport const getParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const parameterNamesData = data.map(({ParameterNames}) => ParameterNames);\r\n        res([...new Set(parameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getWaterParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const waterParameterNamesData = factdata.map(({ParameterName}) => ParameterName);\r\n        res([...new Set(waterParameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getParameterCode = (stationName, parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = data.filter((record) => record.StationName === stationName \r\n            && record.ParameterNames === parameterName);\r\n            console.log(filteredRecords)\r\n        if(filteredRecords && filteredRecords.length > 0) {\r\n            const [record, ...records] = filteredRecords;\r\n            res([record.ParameterCode, record.record_code]);\r\n        }\r\n    });\r\n}\r\n\r\nexport const getWaterParameterCode = (waterParameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = factdata.filter((record) => record.ParameterName === waterParameterName \r\n          );\r\n            console.log(filteredRecords)\r\n            if(filteredRecords && filteredRecords.length > 0) {\r\n                const [record] = filteredRecords;\r\n                res(record.Parameter_Code);\r\n            }\r\n        });\r\n}\r\n\r\nexport const getStationNames = (parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let stationNames = data.filter((record) => record.ParameterNames === parameterName);\r\n        stationNames = stationNames.map(({StationName}) => StationName);\r\n        console.log(stationNames)\r\n        res(stationNames);\r\n    });\r\n}\r\n\r\nexport const getRecordCode = (stationName, parameterCode) => {\r\n    const bracketsRegex = /\\(([^)]+)\\)/;\r\n    const bracketCode = bracketsRegex.exec(stationName)\r\n    console.log(bracketCode[1]);\r\n    return `${bracketCode[1]}00${parameterCode}`;\r\n}\r\n","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\index.js",[],[],"C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\reportWebVitals.js",[],[],"C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\App.jsx",["135","136","137","138","139","140","141","142","143","144","145"],[],"import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport hcbgImage from \"./CoverPhotoByAtticus.jpg\";\r\nimport logof from \"./ISWSLogo.PNG\";\r\n\r\nimport {\r\n  getParametersNames,\r\n  getWaterParametersNames,\r\n  getWaterParameterCode,\r\n  getParameterCode,\r\n  getStationNames,\r\n  getTrendParametersNames,\r\n  getTrendPeriodNames,\r\n  getTrendParameterCode\r\n} from \"./Utils/utils\";\r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nexport default function App() {\r\n  const [stationNames, setStationNames] = useState(null);\r\n  const [waterParameter, setWaterParameter] = useState(null);\r\n\r\n  const [selectedStationName, setSelectedStationName] = useState(\"\");\r\n  const [selectedWaterParameterName, setSelectedWaterParameterName] =\r\n    useState(\"\");\r\n\r\n  const [parameterNames, setParameterNames] = useState(null);\r\n  const [selectedParameterName, setSelectedParameterName] = useState(\"\");\r\n\r\n  const [recordCode, setRecordCode] = useState(0);\r\n  const [waterRecordCode, setWaterRecordCode] = useState(0);\r\n  const [pdfName, setPdfName] = useState(\"\");\r\n  const [waterPdfName, setWaterPdfName] = useState(\"\");\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber,setPage] = useState(1);\r\n\r\n  const [periodNames, setPeriodNames] = useState(null);\r\n  const [trendParameter, setTrendParameter] = useState(null);\r\n  const [selectedPeriodName, setSelectedPeriodName] = useState(\"\");\r\n  const [selectedTrendParameterName, setSelectedTrendParameterName] =\r\n    useState(\"\");\r\n  const [trendRecordCode, settrendRecordCode] = useState(0);\r\n  const [trendPdfName, settrendPdfName] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n      getTrendParametersNames().then((data) => {\r\n          setTrendParameter(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      if (selectedTrendParameterName && selectedTrendParameterName.length > 0) {\r\n          console.log({ trendParameter });\r\n          getTrendPeriodNames(selectedTrendParameterName)\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPeriodNames(data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n      }\r\n  }, [selectedTrendParameterName]);\r\n\r\n  useEffect(() => {\r\n      if (setSelectedPeriodName && selectedTrendParameterName) {\r\n          getTrendParameterCode(selectedPeriodName, selectedTrendParameterName).then(\r\n            ([paramCode, trendRecordCode]) => {\r\n                settrendRecordCode(trendRecordCode);\r\n                console.log(paramCode, trendRecordCode);\r\n            }\r\n          );\r\n      }\r\n  }, [selectedPeriodName, selectedTrendParameterName]);\r\n\r\n  useEffect(() => {\r\n    getParametersNames().then((data) => {\r\n      setParameterNames(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWaterParametersNames().then((data) => {\r\n      setWaterParameter(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedParameterName && selectedParameterName.length > 0) {\r\n      console.log({ parameterNames });\r\n      getStationNames(selectedParameterName)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setStationNames(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedStationName && selectedParameterName) {\r\n      getParameterCode(selectedStationName, selectedParameterName).then(\r\n        ([paramCode, recordCode]) => {\r\n          setRecordCode(recordCode);\r\n          console.log(paramCode, recordCode);\r\n        }\r\n      );\r\n    }\r\n  }, [selectedStationName, selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedWaterParameterName) {\r\n      getWaterParameterCode(selectedWaterParameterName).then((recordCode) => {\r\n        setWaterRecordCode(recordCode);\r\n        console.log(recordCode);\r\n      });\r\n    }\r\n  }, [selectedWaterParameterName]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPdfName(`${recordCode}_EDAplots.pdf`);\r\n  }, [recordCode]);\r\n\r\n  useEffect(() => {\r\n    setWaterPdfName(`${waterRecordCode}_Factsheet.pdf`);\r\n  }, [waterRecordCode]);\r\n\r\n  useEffect(() => {\r\n      settrendPdfName(`${trendRecordCode}.pdf`);\r\n  }, [trendRecordCode]);\r\n\r\n  const handleStationNameSelect = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedStationName(value);\r\n  };\r\n\r\n  const handlePeriodNameSelect = (event) => {\r\n      const { value } = event.target;\r\n      setSelectedPeriodName(value);\r\n  };\r\n\r\n  const handleParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedParameterName(value);\r\n    setWaterRecordCode(\"\");\r\n  };\r\n\r\n  const handleTrendParameterNameChange = (event) => {\r\n      const { value } = event.target;\r\n      setSelectedTrendParameterName(value);\r\n      settrendRecordCode(\"\");\r\n  };\r\n\r\n  const handleWaterParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedWaterParameterName(value);\r\n    setRecordCode(\"\");\r\n    setPage(1);\r\n  };\r\n\r\n  function onDocumentLoadSuccess({ numPages: nextNumPages }) {\r\n    setNumPages(nextNumPages);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{fontFamily: \"Verdana\", textAlign:\"center\", backgroundImage: 'url('+hcbgImage+')', backgroundColor: \"transparent\", backgroundSize:\"cover\"}}>\r\n      <h2 style={{backgroundColor: \"#FF5F0F\", color: \"white\"}}>Water Quality Trends in the Illinois Costal Zone</h2>\r\n      <div style={{float:\"left\"}}>\r\n        <img src={logof}/>\r\n      </div>\r\n      <br/><br/><br/>  <br/>  <br/>\r\n     \r\n      <div>\r\n        <h3 style={{color: \"#13294b\"}}> Data Factsheet for Water Quality Constituents </h3>\r\n        {waterParameter && waterParameter !== null ? (\r\n          <Form.Select\r\n            aria-label=\"Parameter Names\"\r\n            onChange={handleWaterParameterNameChange}\r\n            data-live-search=\"true\"\r\n          >\r\n            <option key=\"parameter_default\" selected disabled>\r\n              Select Parameter\r\n            </option>\r\n            {waterParameter.map((name, i) => (\r\n              <option value={name} key={i}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        ) : (\r\n          <></>\r\n        )\r\n        }\r\n      </div>\r\n\r\n\r\n    <br/>\r\n\r\n\r\n      {waterRecordCode !== \"\" && waterRecordCode? (\r\n        <div>\r\n          <button onClick={() => setPage(pageNumber-1)}>PREV</button>\r\n          <p style={{display:\"inline\"}}> {pageNumber} of {numPages} </p>\r\n          <button onClick={() => setPage(pageNumber+1)}>NEXT</button>\r\n          <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n            <Document\r\n              file={`${process.env.PUBLIC_URL}/results/${waterPdfName}`}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              options={options}\r\n            >\r\n              {\r\n                    <Page\r\n                      scale={100/72} \r\n                      key={`page_${pageNumber}`}\r\n                      pageNumber={pageNumber}\r\n                    />\r\n              }\r\n            </Document>            \r\n          </div>\r\n        </div>\r\n        ) : (\r\n          <></>\r\n        )}  \r\n      \r\n    \r\n    </div>\r\n  );\r\n}","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet\\src\\Utils\\utils.js",["146","147"],[],"import data from '../data/EDAPlots-selectedparameters.json'\r\nimport factdata from '../data/FactSheet-selectedparameters.json'\r\nimport trenddata from '../data/Trendmap-selectedparameters.json'\r\n\r\n\r\nexport const getTrendParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const trendParameterNamesData = trenddata.map(({ParameterName}) => ParameterName);\r\n        res([...new Set(trendParameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getTrendPeriodNames = (parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let periodNames = trenddata.filter((record) => record.ParameterName === parameterName);\r\n        periodNames = periodNames.map(({Period}) => Period);\r\n        console.log(periodNames)\r\n        res(periodNames);\r\n    });\r\n}\r\n\r\nexport const getTrendParameterCode = (periodName, parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = trenddata.filter((record) => record.Period === periodName \r\n            && record.ParameterName === parameterName);\r\n        console.log(filteredRecords)\r\n        if(filteredRecords && filteredRecords.length > 0) {\r\n            const [record, ...records] = filteredRecords;\r\n            res([record.Parameter_Code, record.trend_record_code]);\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport const getParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const parameterNamesData = data.map(({ParameterNames}) => ParameterNames);\r\n        res([...new Set(parameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getWaterParametersNames = () => {\r\n    return new Promise((res, rej) => {\r\n        const waterParameterNamesData = factdata.map(({ParameterName}) => ParameterName);\r\n        res([...new Set(waterParameterNamesData)]);\r\n    });\r\n}\r\n\r\nexport const getParameterCode = (stationName, parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = data.filter((record) => record.StationName === stationName \r\n            && record.ParameterNames === parameterName);\r\n            console.log(filteredRecords)\r\n        if(filteredRecords && filteredRecords.length > 0) {\r\n            const [record, ...records] = filteredRecords;\r\n            res([record.ParameterCode, record.record_code]);\r\n        }\r\n    });\r\n}\r\n\r\nexport const getWaterParameterCode = (waterParameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let filteredRecords = factdata.filter((record) => record.ParameterName === waterParameterName \r\n          );\r\n            console.log(filteredRecords)\r\n            if(filteredRecords && filteredRecords.length > 0) {\r\n                const [record] = filteredRecords;\r\n                res(record.Parameter_Code);\r\n            }\r\n        });\r\n}\r\n\r\nexport const getStationNames = (parameterName) => {\r\n    return new Promise((res, rej) => {\r\n        let stationNames = data.filter((record) => record.ParameterNames === parameterName);\r\n        stationNames = stationNames.map(({StationName}) => StationName);\r\n        console.log(stationNames)\r\n        res(stationNames);\r\n    });\r\n}\r\n\r\nexport const getRecordCode = (stationName, parameterCode) => {\r\n    const bracketsRegex = /\\(([^)]+)\\)/;\r\n    const bracketCode = bracketsRegex.exec(stationName)\r\n    console.log(bracketCode[1]);\r\n    return `${bracketCode[1]}00${parameterCode}`;\r\n}\r\n","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\index.js",[],[],"C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\reportWebVitals.js",[],[],"C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\App.jsx",["148","149","150","151","152","153","154","155","156","157","158"],[],"import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport hcbgImage from \"./CoverPhotoByAtticus.jpg\";\r\nimport logof from \"./ISWSLogo.PNG\";\r\n\r\nimport {\r\n  getParametersNames,\r\n  getWaterParametersNames,\r\n  getWaterParameterCode,\r\n  getParameterCode,\r\n  getStationNames,\r\n  getTrendParametersNames,\r\n  getTrendPeriodNames,\r\n  getTrendParameterCode\r\n} from \"./Utils/utils\";\r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nexport default function App() {\r\n  const [stationNames, setStationNames] = useState(null);\r\n  const [waterParameter, setWaterParameter] = useState(null);\r\n\r\n  const [selectedStationName, setSelectedStationName] = useState(\"\");\r\n  const [selectedWaterParameterName, setSelectedWaterParameterName] =\r\n    useState(\"\");\r\n\r\n  const [parameterNames, setParameterNames] = useState(null);\r\n  const [selectedParameterName, setSelectedParameterName] = useState(\"\");\r\n\r\n  const [recordCode, setRecordCode] = useState(0);\r\n  const [waterRecordCode, setWaterRecordCode] = useState(0);\r\n  const [pdfName, setPdfName] = useState(\"\");\r\n  const [waterPdfName, setWaterPdfName] = useState(\"\");\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber,setPage] = useState(1);\r\n\r\n  const [periodNames, setPeriodNames] = useState(null);\r\n  const [trendParameter, setTrendParameter] = useState(null);\r\n  const [selectedPeriodName, setSelectedPeriodName] = useState(\"\");\r\n  const [selectedTrendParameterName, setSelectedTrendParameterName] =\r\n    useState(\"\");\r\n  const [trendRecordCode, settrendRecordCode] = useState(0);\r\n  const [trendPdfName, settrendPdfName] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n      getTrendParametersNames().then((data) => {\r\n          setTrendParameter(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      if (selectedTrendParameterName && selectedTrendParameterName.length > 0) {\r\n          console.log({ trendParameter });\r\n          getTrendPeriodNames(selectedTrendParameterName)\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPeriodNames(data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n      }\r\n  }, [selectedTrendParameterName]);\r\n\r\n  useEffect(() => {\r\n      if (setSelectedPeriodName && selectedTrendParameterName) {\r\n          getTrendParameterCode(selectedPeriodName, selectedTrendParameterName).then(\r\n            ([paramCode, trendRecordCode]) => {\r\n                settrendRecordCode(trendRecordCode);\r\n                console.log(paramCode, trendRecordCode);\r\n            }\r\n          );\r\n      }\r\n  }, [selectedPeriodName, selectedTrendParameterName]);\r\n\r\n  useEffect(() => {\r\n    getParametersNames().then((data) => {\r\n      setParameterNames(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWaterParametersNames().then((data) => {\r\n      setWaterParameter(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedParameterName && selectedParameterName.length > 0) {\r\n      console.log({ parameterNames });\r\n      getStationNames(selectedParameterName)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setStationNames(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedStationName && selectedParameterName) {\r\n      getParameterCode(selectedStationName, selectedParameterName).then(\r\n        ([paramCode, recordCode]) => {\r\n          setRecordCode(recordCode);\r\n          console.log(paramCode, recordCode);\r\n        }\r\n      );\r\n    }\r\n  }, [selectedStationName, selectedParameterName]);\r\n\r\n  useEffect(() => {\r\n    if (selectedWaterParameterName) {\r\n      getWaterParameterCode(selectedWaterParameterName).then((recordCode) => {\r\n        setWaterRecordCode(recordCode);\r\n        console.log(recordCode);\r\n      });\r\n    }\r\n  }, [selectedWaterParameterName]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPdfName(`${recordCode}_EDAplots.pdf`);\r\n  }, [recordCode]);\r\n\r\n  useEffect(() => {\r\n    setWaterPdfName(`${waterRecordCode}_LM_Factsheet.pdf`);\r\n  }, [waterRecordCode]);\r\n\r\n  useEffect(() => {\r\n      settrendPdfName(`${trendRecordCode}.pdf`);\r\n  }, [trendRecordCode]);\r\n\r\n  const handleStationNameSelect = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedStationName(value);\r\n  };\r\n\r\n  const handlePeriodNameSelect = (event) => {\r\n      const { value } = event.target;\r\n      setSelectedPeriodName(value);\r\n  };\r\n\r\n  const handleParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedParameterName(value);\r\n    setWaterRecordCode(\"\");\r\n  };\r\n\r\n  const handleTrendParameterNameChange = (event) => {\r\n      const { value } = event.target;\r\n      setSelectedTrendParameterName(value);\r\n      settrendRecordCode(\"\");\r\n  };\r\n\r\n  const handleWaterParameterNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setSelectedWaterParameterName(value);\r\n    setRecordCode(\"\");\r\n    setPage(1);\r\n  };\r\n\r\n  function onDocumentLoadSuccess({ numPages: nextNumPages }) {\r\n    setNumPages(nextNumPages);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{fontFamily: \"Verdana\", textAlign:\"center\", backgroundImage: 'url('+hcbgImage+')', backgroundColor: \"transparent\", backgroundSize:\"cover\"}}>\r\n      <h2 style={{backgroundColor: \"#FF5F0F\", color: \"white\"}}>Water Quality Trends in the Illinois Costal Zone</h2>\r\n      <div style={{float:\"left\"}}>\r\n        <img src={logof}/>\r\n      </div>\r\n      <br/><br/><br/>  <br/>  <br/>\r\n     \r\n      <div>\r\n        <h3 style={{color: \"#13294b\"}}> Data Factsheet for Water Quality Constituents </h3>\r\n        {waterParameter && waterParameter !== null ? (\r\n          <Form.Select\r\n            aria-label=\"Parameter Names\"\r\n            onChange={handleWaterParameterNameChange}\r\n            data-live-search=\"true\"\r\n          >\r\n            <option key=\"parameter_default\" selected disabled>\r\n              Select Parameter\r\n            </option>\r\n            {waterParameter.map((name, i) => (\r\n              <option value={name} key={i}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        ) : (\r\n          <></>\r\n        )\r\n        }\r\n      </div>\r\n\r\n\r\n    <br/>\r\n\r\n\r\n      {waterRecordCode !== \"\" && waterRecordCode? (\r\n        <div>\r\n          <button onClick={() => setPage(pageNumber-1)}>PREV</button>\r\n          <p style={{display:\"inline\"}}> {pageNumber} of {numPages} </p>\r\n          <button onClick={() => setPage(pageNumber+1)}>NEXT</button>\r\n          <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n            <Document\r\n              file={`${process.env.PUBLIC_URL}/results/${waterPdfName}`}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              options={options}\r\n            >\r\n              {\r\n                    <Page\r\n                      scale={100/72} \r\n                      key={`page_${pageNumber}`}\r\n                      pageNumber={pageNumber}\r\n                    />\r\n              }\r\n            </Document>            \r\n          </div>\r\n        </div>\r\n        ) : (\r\n          <></>\r\n        )}  \r\n      \r\n    \r\n    </div>\r\n  );\r\n}","C:\\Users\\nnk4\\Projects\\ICoastal\\pdf-viewer-ICoastal - Factsheet - LM\\src\\Utils\\utils.js",["159","160"],[],{"ruleId":"161","severity":1,"message":"162","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":61,"column":6,"nodeType":"167","endLine":61,"endColumn":29,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":117,"column":9,"nodeType":"171","endLine":117,"endColumn":27},{"ruleId":"161","severity":1,"message":"172","line":23,"column":31,"nodeType":"163","messageId":"164","endLine":23,"endColumn":38},{"ruleId":"165","severity":1,"message":"173","line":68,"column":6,"nodeType":"167","endLine":68,"endColumn":34,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"166","line":103,"column":6,"nodeType":"167","endLine":103,"endColumn":29,"suggestions":"175"},{"ruleId":"169","severity":1,"message":"170","line":175,"column":9,"nodeType":"171","endLine":175,"endColumn":27},{"ruleId":"161","severity":1,"message":"172","line":28,"column":31,"nodeType":"163","messageId":"164","endLine":28,"endColumn":38},{"ruleId":"161","severity":1,"message":"172","line":55,"column":31,"nodeType":"163","messageId":"164","endLine":55,"endColumn":38},{"ruleId":"161","severity":1,"message":"176","line":26,"column":10,"nodeType":"163","messageId":"164","endLine":26,"endColumn":22},{"ruleId":"161","severity":1,"message":"177","line":38,"column":10,"nodeType":"163","messageId":"164","endLine":38,"endColumn":17},{"ruleId":"161","severity":1,"message":"178","line":43,"column":10,"nodeType":"163","messageId":"164","endLine":43,"endColumn":21},{"ruleId":"161","severity":1,"message":"179","line":49,"column":10,"nodeType":"163","messageId":"164","endLine":49,"endColumn":22},{"ruleId":"165","severity":1,"message":"173","line":68,"column":6,"nodeType":"167","endLine":68,"endColumn":34,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"166","line":103,"column":6,"nodeType":"167","endLine":103,"endColumn":29,"suggestions":"181"},{"ruleId":"161","severity":1,"message":"182","line":138,"column":9,"nodeType":"163","messageId":"164","endLine":138,"endColumn":32},{"ruleId":"161","severity":1,"message":"183","line":143,"column":9,"nodeType":"163","messageId":"164","endLine":143,"endColumn":31},{"ruleId":"161","severity":1,"message":"184","line":148,"column":9,"nodeType":"163","messageId":"164","endLine":148,"endColumn":34},{"ruleId":"161","severity":1,"message":"185","line":154,"column":9,"nodeType":"163","messageId":"164","endLine":154,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":175,"column":9,"nodeType":"171","endLine":175,"endColumn":27},{"ruleId":"161","severity":1,"message":"172","line":28,"column":31,"nodeType":"163","messageId":"164","endLine":28,"endColumn":38},{"ruleId":"161","severity":1,"message":"172","line":55,"column":31,"nodeType":"163","messageId":"164","endLine":55,"endColumn":38},{"ruleId":"161","severity":1,"message":"176","line":26,"column":10,"nodeType":"163","messageId":"164","endLine":26,"endColumn":22},{"ruleId":"161","severity":1,"message":"177","line":38,"column":10,"nodeType":"163","messageId":"164","endLine":38,"endColumn":17},{"ruleId":"161","severity":1,"message":"178","line":43,"column":10,"nodeType":"163","messageId":"164","endLine":43,"endColumn":21},{"ruleId":"161","severity":1,"message":"179","line":49,"column":10,"nodeType":"163","messageId":"164","endLine":49,"endColumn":22},{"ruleId":"165","severity":1,"message":"173","line":68,"column":6,"nodeType":"167","endLine":68,"endColumn":34,"suggestions":"186"},{"ruleId":"165","severity":1,"message":"166","line":103,"column":6,"nodeType":"167","endLine":103,"endColumn":29,"suggestions":"187"},{"ruleId":"161","severity":1,"message":"182","line":138,"column":9,"nodeType":"163","messageId":"164","endLine":138,"endColumn":32},{"ruleId":"161","severity":1,"message":"183","line":143,"column":9,"nodeType":"163","messageId":"164","endLine":143,"endColumn":31},{"ruleId":"161","severity":1,"message":"184","line":148,"column":9,"nodeType":"163","messageId":"164","endLine":148,"endColumn":34},{"ruleId":"161","severity":1,"message":"185","line":154,"column":9,"nodeType":"163","messageId":"164","endLine":154,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":175,"column":9,"nodeType":"171","endLine":175,"endColumn":27},{"ruleId":"161","severity":1,"message":"172","line":28,"column":31,"nodeType":"163","messageId":"164","endLine":28,"endColumn":38},{"ruleId":"161","severity":1,"message":"172","line":55,"column":31,"nodeType":"163","messageId":"164","endLine":55,"endColumn":38},{"ruleId":"161","severity":1,"message":"176","line":26,"column":10,"nodeType":"163","messageId":"164","endLine":26,"endColumn":22},{"ruleId":"161","severity":1,"message":"177","line":38,"column":10,"nodeType":"163","messageId":"164","endLine":38,"endColumn":17},{"ruleId":"161","severity":1,"message":"178","line":43,"column":10,"nodeType":"163","messageId":"164","endLine":43,"endColumn":21},{"ruleId":"161","severity":1,"message":"179","line":49,"column":10,"nodeType":"163","messageId":"164","endLine":49,"endColumn":22},{"ruleId":"165","severity":1,"message":"173","line":68,"column":6,"nodeType":"167","endLine":68,"endColumn":34,"suggestions":"188"},{"ruleId":"165","severity":1,"message":"166","line":103,"column":6,"nodeType":"167","endLine":103,"endColumn":29,"suggestions":"189"},{"ruleId":"161","severity":1,"message":"182","line":138,"column":9,"nodeType":"163","messageId":"164","endLine":138,"endColumn":32},{"ruleId":"161","severity":1,"message":"183","line":143,"column":9,"nodeType":"163","messageId":"164","endLine":143,"endColumn":31},{"ruleId":"161","severity":1,"message":"184","line":148,"column":9,"nodeType":"163","messageId":"164","endLine":148,"endColumn":34},{"ruleId":"161","severity":1,"message":"185","line":154,"column":9,"nodeType":"163","messageId":"164","endLine":154,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":175,"column":9,"nodeType":"171","endLine":175,"endColumn":27},{"ruleId":"161","severity":1,"message":"172","line":28,"column":31,"nodeType":"163","messageId":"164","endLine":28,"endColumn":38},{"ruleId":"161","severity":1,"message":"172","line":55,"column":31,"nodeType":"163","messageId":"164","endLine":55,"endColumn":38},"no-unused-vars","'hcbgImage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parameterNames'. Either include it or remove the dependency array.","ArrayExpression",["190"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'records' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'trendParameter'. Either include it or remove the dependency array.",["191"],["192"],"'stationNames' is assigned a value but never used.","'pdfName' is assigned a value but never used.","'periodNames' is assigned a value but never used.","'trendPdfName' is assigned a value but never used.",["193"],["194"],"'handleStationNameSelect' is assigned a value but never used.","'handlePeriodNameSelect' is assigned a value but never used.","'handleParameterNameChange' is assigned a value but never used.","'handleTrendParameterNameChange' is assigned a value but never used.",["195"],["196"],["197"],["198"],{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"199","fix":"203"},{"desc":"201","fix":"204"},{"desc":"199","fix":"205"},{"desc":"201","fix":"206"},{"desc":"199","fix":"207"},{"desc":"201","fix":"208"},{"desc":"199","fix":"209"},"Update the dependencies array to be: [parameterNames, selectedParameterName]",{"range":"210","text":"211"},"Update the dependencies array to be: [selectedTrendParameterName, trendParameter]",{"range":"212","text":"213"},{"range":"214","text":"211"},{"range":"215","text":"213"},{"range":"216","text":"211"},{"range":"217","text":"213"},{"range":"218","text":"211"},{"range":"219","text":"213"},{"range":"220","text":"211"},[1896,1919],"[parameterNames, selectedParameterName]",[2321,2349],"[selectedTrendParameterName, trendParameter]",[3364,3387],[2321,2349],[3364,3387],[2321,2349],[3364,3387],[2321,2349],[3364,3387]]